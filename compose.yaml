version: '3.9'
services:
  nginx:
    image: nginx:1.25.2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/
    depends_on:
      - backend
    networks:
      - draft-backend-network

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      target: dev
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      migration:
        condition: service_completed_successfully
      # elasticsearch01:
      #   condition: service_started
    networks:
      - draft-backend-network

  postgres:
    image: postgres:16.0-alpine3.18
    restart: always
    # command:
      # - "postgres"
      # - "-c"
      # - "log_destination=stderr"
      # - "-c"
      # - "log_statement=all"
      # - "-c"
      # - "log_connections=on"
      # - "-c"
      # - "log_disconnections=on"
    # if not POSTGRES_USER and POSTGRES_DB, it will be "postgres".
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./tmp/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-q", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 1s
      timeout: 1s
      retries: 5
    networks:
      - draft-backend-network

  redis:
    image: redis:7.2.2-alpine3.18
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./tmp/cache/data:/var/lib/redis/data
    networks:
      - draft-backend-network

  # elasticsearch01:
  #   build: ./elasticsearch
  #   container_name: elasticsearch01
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - draft-backend-network

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.8.1
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch01:9200
  #   depends_on:
  #     - elasticsearch01
  #   networks:
  #     - draft-backend-network

  migration:
    build: ./migrations
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations/db:/go/src/db
    env_file:
      - .env
    networks:
      - draft-backend-network

networks:
  draft-backend-network:
    driver: bridge
    external: true
